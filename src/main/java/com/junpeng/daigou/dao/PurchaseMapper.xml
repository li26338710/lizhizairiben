<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.junpeng.daigou.dao.PurchaseMapper" >
  <resultMap id="BaseResultMap" type="com.junpeng.daigou.model.Purchase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="idpurchase" jdbcType="INTEGER" property="idpurchase" />
    <result column="idbrand" jdbcType="INTEGER" property="idbrand" />
    <result column="totalprice" jdbcType="DOUBLE" property="totalprice" />
    <result column="purchasedate" jdbcType="TIMESTAMP" property="purchasedate" />
    <result column="purchasetype" jdbcType="VARCHAR" property="purchasetype" />
    <result column="cardno" jdbcType="VARCHAR" property="cardno" />
    <result column="usescore" jdbcType="INTEGER" property="usescore" />
    <result column="rate" jdbcType="DOUBLE" property="rate" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    idpurchase, idbrand, totalprice, purchasedate, purchasetype, cardno, usescore, rate
  </sql>
  <select id="selectByExample" parameterType="com.junpeng.daigou.model.PurchaseExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from purchase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from purchase
    where idpurchase = #{idpurchase,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from purchase
    where idpurchase = #{idpurchase,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.junpeng.daigou.model.PurchaseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from purchase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.junpeng.daigou.model.Purchase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into purchase (idpurchase, idbrand, totalprice, 
      purchasedate, purchasetype, cardno, 
      usescore, rate)
    values (#{idpurchase,jdbcType=INTEGER}, #{idbrand,jdbcType=INTEGER}, #{totalprice,jdbcType=DOUBLE}, 
      #{purchasedate,jdbcType=TIMESTAMP}, #{purchasetype,jdbcType=VARCHAR}, #{cardno,jdbcType=VARCHAR}, 
      #{usescore,jdbcType=INTEGER}, #{rate,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.junpeng.daigou.model.Purchase" >
<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="idpurchase">
SELECT LAST_INSERT_ID() AS idpurchase
</selectKey>
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into purchase
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idpurchase != null" >
        idpurchase,
      </if>
      <if test="idbrand != null" >
        idbrand,
      </if>
      <if test="totalprice != null" >
        totalprice,
      </if>
      <if test="purchasedate != null" >
        purchasedate,
      </if>
      <if test="purchasetype != null" >
        purchasetype,
      </if>
      <if test="cardno != null" >
        cardno,
      </if>
      <if test="usescore != null" >
        usescore,
      </if>
      <if test="rate != null" >
        rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idpurchase != null" >
        #{idpurchase,jdbcType=INTEGER},
      </if>
      <if test="idbrand != null" >
        #{idbrand,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=DOUBLE},
      </if>
      <if test="purchasedate != null" >
        #{purchasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasetype != null" >
        #{purchasetype,jdbcType=VARCHAR},
      </if>
      <if test="cardno != null" >
        #{cardno,jdbcType=VARCHAR},
      </if>
      <if test="usescore != null" >
        #{usescore,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.junpeng.daigou.model.PurchaseExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from purchase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update purchase
    <set >
      <if test="record.idpurchase != null" >
        idpurchase = #{record.idpurchase,jdbcType=INTEGER},
      </if>
      <if test="record.idbrand != null" >
        idbrand = #{record.idbrand,jdbcType=INTEGER},
      </if>
      <if test="record.totalprice != null">
        totalprice = #{record.totalprice,jdbcType=DOUBLE},
      </if>
      <if test="record.purchasedate != null" >
        purchasedate = #{record.purchasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.purchasetype != null" >
        purchasetype = #{record.purchasetype,jdbcType=VARCHAR},
      </if>
      <if test="record.cardno != null" >
        cardno = #{record.cardno,jdbcType=VARCHAR},
      </if>
      <if test="record.usescore != null" >
        usescore = #{record.usescore,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update purchase
    set idpurchase = #{record.idpurchase,jdbcType=INTEGER},
      idbrand = #{record.idbrand,jdbcType=INTEGER},
      totalprice = #{record.totalprice,jdbcType=DOUBLE},
      purchasedate = #{record.purchasedate,jdbcType=TIMESTAMP},
      purchasetype = #{record.purchasetype,jdbcType=VARCHAR},
      cardno = #{record.cardno,jdbcType=VARCHAR},
      usescore = #{record.usescore,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.junpeng.daigou.model.Purchase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update purchase
    <set >
      <if test="idbrand != null" >
        idbrand = #{idbrand,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        totalprice = #{totalprice,jdbcType=DOUBLE},
      </if>
      <if test="purchasedate != null" >
        purchasedate = #{purchasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasetype != null" >
        purchasetype = #{purchasetype,jdbcType=VARCHAR},
      </if>
      <if test="cardno != null" >
        cardno = #{cardno,jdbcType=VARCHAR},
      </if>
      <if test="usescore != null" >
        usescore = #{usescore,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=DOUBLE},
      </if>
    </set>
    where idpurchase = #{idpurchase,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.junpeng.daigou.model.Purchase" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update purchase
    set idbrand = #{idbrand,jdbcType=INTEGER},
      totalprice = #{totalprice,jdbcType=DOUBLE},
      purchasedate = #{purchasedate,jdbcType=TIMESTAMP},
      purchasetype = #{purchasetype,jdbcType=VARCHAR},
      cardno = #{cardno,jdbcType=VARCHAR},
      usescore = #{usescore,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DOUBLE}
    where idpurchase = #{idpurchase,jdbcType=INTEGER}
  </update>
  
  <select id="getPurchaseByBrandOrDate" resultType="com.junpeng.daigou.model.Purchase" >
SELECT 
    p.*, m.marketName
FROM
    purchase p
        LEFT JOIN
    market m ON m.idmarket = m.idmarket
WHERE
    1 = 1 
    <if test="marketId != null and marketId != 0">
    	AND m.idmarket = #{marketId,jdbcType=INTEGER}
    </if>
    <if test="startDate != null">
        AND purchasedate > #{startDate,jdbcType=TIMESTAMP}
    </if>
    <if test="idpurchase != null and idpurchase != 0">
        AND idpurchase = #{idpurchase,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="getPurchaseByPurchaseId" resultType="com.junpeng.daigou.model.PurchaseDetail" >
	SELECT 
	    pd.*,
	    p.rate,
	    pro.productname,
	    b.idbrand,
	    b.brandName,
	    m.idmarket,
	    m.marketname
	FROM
	    purchasedetail pd,
	    purchase p,
	    product pro,
	    brand b,
	    market m
	WHERE
	    p.idpurchase = pd.idpurchase
	        AND pd.idproduct = pro.idproduct
	        AND pd.idbrand = b.idbrand
	        AND m.idmarket = p.idmarket
    <if test="purchaseId != null and purchaseId != 0">
        and pd.idpurchase = #{purchaseId,jdbcType=INTEGER}
    </if>
    <if test="productId != null and productId != 0">
        and pd.idproduct = #{productId,jdbcType=INTEGER}
    </if>
    <if test="marketId != null and marketId != 0">
    	AND p.idmarket = #{marketId,jdbcType=INTEGER}
    </if>
    <if test="brandId != null and brandId != 0">
    	AND pd.idbrand = #{brandId,jdbcType=INTEGER}
    </if>
    <if test="purchaseDetailId != null and purchaseDetailId != 0">
    	AND pd.idpurchasedetail = #{purchaseDetailId,jdbcType=INTEGER}
    </if>    
    
  </select>
  
  <select id="getProductGroupByStatusForCount"  resultType="com.junpeng.daigou.model.PurchasingProduct">
  
  SELECT 
    p.idproduct,
    p.productname,
    p.productnamejapan,
    p.officalprice,
    d.discountsettingcomment,
    d.discount,
    p.costPrice,
    p.costPriceJpy,
    SUM(o.count) as sumcount
FROM
    product p,
    orderdetail o,
    discountsetting d
WHERE
    p.idproduct = o.idproduct
        AND p.iddiscountsetting = d.iddiscountsetting
        AND o.status = 0
GROUP BY p.idproduct;
  
  
  </select>
  
</mapper>