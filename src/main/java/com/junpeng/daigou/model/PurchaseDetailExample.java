package com.junpeng.daigou.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class PurchaseDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public PurchaseDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdpurchasedetailIsNull() {
            addCriterion("idpurchasedetail is null");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailIsNotNull() {
            addCriterion("idpurchasedetail is not null");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailEqualTo(Integer value) {
            addCriterion("idpurchasedetail =", value, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailNotEqualTo(Integer value) {
            addCriterion("idpurchasedetail <>", value, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailGreaterThan(Integer value) {
            addCriterion("idpurchasedetail >", value, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailGreaterThanOrEqualTo(Integer value) {
            addCriterion("idpurchasedetail >=", value, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailLessThan(Integer value) {
            addCriterion("idpurchasedetail <", value, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailLessThanOrEqualTo(Integer value) {
            addCriterion("idpurchasedetail <=", value, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailIn(List<Integer> values) {
            addCriterion("idpurchasedetail in", values, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailNotIn(List<Integer> values) {
            addCriterion("idpurchasedetail not in", values, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailBetween(Integer value1, Integer value2) {
            addCriterion("idpurchasedetail between", value1, value2, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchasedetailNotBetween(Integer value1, Integer value2) {
            addCriterion("idpurchasedetail not between", value1, value2, "idpurchasedetail");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseIsNull() {
            addCriterion("idpurchase is null");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseIsNotNull() {
            addCriterion("idpurchase is not null");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseEqualTo(Integer value) {
            addCriterion("idpurchase =", value, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseNotEqualTo(Integer value) {
            addCriterion("idpurchase <>", value, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseGreaterThan(Integer value) {
            addCriterion("idpurchase >", value, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("idpurchase >=", value, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseLessThan(Integer value) {
            addCriterion("idpurchase <", value, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseLessThanOrEqualTo(Integer value) {
            addCriterion("idpurchase <=", value, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseIn(List<Integer> values) {
            addCriterion("idpurchase in", values, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseNotIn(List<Integer> values) {
            addCriterion("idpurchase not in", values, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseBetween(Integer value1, Integer value2) {
            addCriterion("idpurchase between", value1, value2, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdpurchaseNotBetween(Integer value1, Integer value2) {
            addCriterion("idpurchase not between", value1, value2, "idpurchase");
            return (Criteria) this;
        }

        public Criteria andIdproductIsNull() {
            addCriterion("idproduct is null");
            return (Criteria) this;
        }

        public Criteria andIdproductIsNotNull() {
            addCriterion("idproduct is not null");
            return (Criteria) this;
        }

        public Criteria andIdproductEqualTo(Integer value) {
            addCriterion("idproduct =", value, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductNotEqualTo(Integer value) {
            addCriterion("idproduct <>", value, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductGreaterThan(Integer value) {
            addCriterion("idproduct >", value, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductGreaterThanOrEqualTo(Integer value) {
            addCriterion("idproduct >=", value, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductLessThan(Integer value) {
            addCriterion("idproduct <", value, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductLessThanOrEqualTo(Integer value) {
            addCriterion("idproduct <=", value, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductIn(List<Integer> values) {
            addCriterion("idproduct in", values, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductNotIn(List<Integer> values) {
            addCriterion("idproduct not in", values, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductBetween(Integer value1, Integer value2) {
            addCriterion("idproduct between", value1, value2, "idproduct");
            return (Criteria) this;
        }

        public Criteria andIdproductNotBetween(Integer value1, Integer value2) {
            addCriterion("idproduct not between", value1, value2, "idproduct");
            return (Criteria) this;
        }

        public Criteria andCountIsNull() {
            addCriterion("count is null");
            return (Criteria) this;
        }

        public Criteria andCountIsNotNull() {
            addCriterion("count is not null");
            return (Criteria) this;
        }

        public Criteria andCountEqualTo(Integer value) {
            addCriterion("count =", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotEqualTo(Integer value) {
            addCriterion("count <>", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountGreaterThan(Integer value) {
            addCriterion("count >", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("count >=", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountLessThan(Integer value) {
            addCriterion("count <", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountLessThanOrEqualTo(Integer value) {
            addCriterion("count <=", value, "count");
            return (Criteria) this;
        }

        public Criteria andCountIn(List<Integer> values) {
            addCriterion("count in", values, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotIn(List<Integer> values) {
            addCriterion("count not in", values, "count");
            return (Criteria) this;
        }

        public Criteria andCountBetween(Integer value1, Integer value2) {
            addCriterion("count between", value1, value2, "count");
            return (Criteria) this;
        }

        public Criteria andCountNotBetween(Integer value1, Integer value2) {
            addCriterion("count not between", value1, value2, "count");
            return (Criteria) this;
        }

        public Criteria andSinglepriceIsNull() {
            addCriterion("singleprice is null");
            return (Criteria) this;
        }

        public Criteria andSinglepriceIsNotNull() {
            addCriterion("singleprice is not null");
            return (Criteria) this;
        }

        public Criteria andSinglepriceEqualTo(Double value) {
            addCriterion("singleprice =", value, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceNotEqualTo(Double value) {
            addCriterion("singleprice <>", value, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceGreaterThan(Double value) {
            addCriterion("singleprice >", value, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceGreaterThanOrEqualTo(Double value) {
            addCriterion("singleprice >=", value, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceLessThan(Double value) {
            addCriterion("singleprice <", value, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceLessThanOrEqualTo(Double value) {
            addCriterion("singleprice <=", value, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceIn(List<Double> values) {
            addCriterion("singleprice in", values, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceNotIn(List<Double> values) {
            addCriterion("singleprice not in", values, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceBetween(Double value1, Double value2) {
            addCriterion("singleprice between", value1, value2, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSinglepriceNotBetween(Double value1, Double value2) {
            addCriterion("singleprice not between", value1, value2, "singleprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceIsNull() {
            addCriterion("sumprice is null");
            return (Criteria) this;
        }

        public Criteria andSumpriceIsNotNull() {
            addCriterion("sumprice is not null");
            return (Criteria) this;
        }

        public Criteria andSumpriceEqualTo(Double value) {
            addCriterion("sumprice =", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceNotEqualTo(Double value) {
            addCriterion("sumprice <>", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceGreaterThan(Double value) {
            addCriterion("sumprice >", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("sumprice >=", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceLessThan(Double value) {
            addCriterion("sumprice <", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceLessThanOrEqualTo(Double value) {
            addCriterion("sumprice <=", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceIn(List<Double> values) {
            addCriterion("sumprice in", values, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceNotIn(List<Double> values) {
            addCriterion("sumprice not in", values, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceBetween(Double value1, Double value2) {
            addCriterion("sumprice between", value1, value2, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceNotBetween(Double value1, Double value2) {
            addCriterion("sumprice not between", value1, value2, "sumprice");
            return (Criteria) this;
        }

        public Criteria andGetscoreIsNull() {
            addCriterion("getscore is null");
            return (Criteria) this;
        }

        public Criteria andGetscoreIsNotNull() {
            addCriterion("getscore is not null");
            return (Criteria) this;
        }

        public Criteria andGetscoreEqualTo(Integer value) {
            addCriterion("getscore =", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreNotEqualTo(Integer value) {
            addCriterion("getscore <>", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreGreaterThan(Integer value) {
            addCriterion("getscore >", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("getscore >=", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreLessThan(Integer value) {
            addCriterion("getscore <", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreLessThanOrEqualTo(Integer value) {
            addCriterion("getscore <=", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreLike(String value) {
            addCriterion("getscore like", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreNotLike(String value) {
            addCriterion("getscore not like", value, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreIn(List<Integer> values) {
            addCriterion("getscore in", values, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreNotIn(List<Integer> values) {
            addCriterion("getscore not in", values, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreBetween(Integer value1, Integer value2) {
            addCriterion("getscore between", value1, value2, "getscore");
            return (Criteria) this;
        }

        public Criteria andGetscoreNotBetween(Integer value1, Integer value2) {
            addCriterion("getscore not between", value1, value2, "getscore");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolIsNull() {
            addCriterion("purchasedetailcol is null");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolIsNotNull() {
            addCriterion("purchasedetailcol is not null");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolEqualTo(Integer value) {
            addCriterion("purchasedetailcol =", value, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolNotEqualTo(Integer value) {
            addCriterion("purchasedetailcol <>", value, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolGreaterThan(Integer value) {
            addCriterion("purchasedetailcol >", value, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolGreaterThanOrEqualTo(Integer value) {
            addCriterion("purchasedetailcol >=", value, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolLessThan(Integer value) {
            addCriterion("purchasedetailcol <", value, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolLessThanOrEqualTo(Integer value) {
            addCriterion("purchasedetailcol <=", value, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolIn(List<Integer> values) {
            addCriterion("purchasedetailcol in", values, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolNotIn(List<Integer> values) {
            addCriterion("purchasedetailcol not in", values, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolBetween(Integer value1, Integer value2) {
            addCriterion("purchasedetailcol between", value1, value2, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcolNotBetween(Integer value1, Integer value2) {
            addCriterion("purchasedetailcol not between", value1, value2, "purchasedetailcol");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1IsNull() {
            addCriterion("purchasedetailcol1 is null");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1IsNotNull() {
            addCriterion("purchasedetailcol1 is not null");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1EqualTo(Integer value) {
            addCriterion("purchasedetailcol1 =", value, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1NotEqualTo(Integer value) {
            addCriterion("purchasedetailcol1 <>", value, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1GreaterThan(Integer value) {
            addCriterion("purchasedetailcol1 >", value, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1GreaterThanOrEqualTo(Integer value) {
            addCriterion("purchasedetailcol1 >=", value, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1LessThan(Integer value) {
            addCriterion("purchasedetailcol1 <", value, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1LessThanOrEqualTo(Integer value) {
            addCriterion("purchasedetailcol1 <=", value, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1In(List<Integer> values) {
            addCriterion("purchasedetailcol1 in", values, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1NotIn(List<Integer> values) {
            addCriterion("purchasedetailcol1 not in", values, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1Between(Integer value1, Integer value2) {
            addCriterion("purchasedetailcol1 between", value1, value2, "purchasedetailcol1");
            return (Criteria) this;
        }

        public Criteria andPurchasedetailcol1NotBetween(Integer value1, Integer value2) {
            addCriterion("purchasedetailcol1 not between", value1, value2, "purchasedetailcol1");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchasedetail
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table purchasedetail
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}