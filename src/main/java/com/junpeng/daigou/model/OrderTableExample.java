package com.junpeng.daigou.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OrderTableExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public OrderTableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdorderIsNull() {
            addCriterion("idorder is null");
            return (Criteria) this;
        }

        public Criteria andIdorderIsNotNull() {
            addCriterion("idorder is not null");
            return (Criteria) this;
        }

        public Criteria andIdorderEqualTo(Integer value) {
            addCriterion("idorder =", value, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderNotEqualTo(Integer value) {
            addCriterion("idorder <>", value, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderGreaterThan(Integer value) {
            addCriterion("idorder >", value, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderGreaterThanOrEqualTo(Integer value) {
            addCriterion("idorder >=", value, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderLessThan(Integer value) {
            addCriterion("idorder <", value, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderLessThanOrEqualTo(Integer value) {
            addCriterion("idorder <=", value, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderIn(List<Integer> values) {
            addCriterion("idorder in", values, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderNotIn(List<Integer> values) {
            addCriterion("idorder not in", values, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderBetween(Integer value1, Integer value2) {
            addCriterion("idorder between", value1, value2, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdorderNotBetween(Integer value1, Integer value2) {
            addCriterion("idorder not between", value1, value2, "idorder");
            return (Criteria) this;
        }

        public Criteria andIdcustomerIsNull() {
            addCriterion("idcustomer is null");
            return (Criteria) this;
        }

        public Criteria andIdcustomerIsNotNull() {
            addCriterion("idcustomer is not null");
            return (Criteria) this;
        }

        public Criteria andIdcustomerEqualTo(Integer value) {
            addCriterion("idcustomer =", value, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerNotEqualTo(Integer value) {
            addCriterion("idcustomer <>", value, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerGreaterThan(Integer value) {
            addCriterion("idcustomer >", value, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerGreaterThanOrEqualTo(Integer value) {
            addCriterion("idcustomer >=", value, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerLessThan(Integer value) {
            addCriterion("idcustomer <", value, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerLessThanOrEqualTo(Integer value) {
            addCriterion("idcustomer <=", value, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerIn(List<Integer> values) {
            addCriterion("idcustomer in", values, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerNotIn(List<Integer> values) {
            addCriterion("idcustomer not in", values, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerBetween(Integer value1, Integer value2) {
            addCriterion("idcustomer between", value1, value2, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andIdcustomerNotBetween(Integer value1, Integer value2) {
            addCriterion("idcustomer not between", value1, value2, "idcustomer");
            return (Criteria) this;
        }

        public Criteria andBookdateIsNull() {
            addCriterion("bookdate is null");
            return (Criteria) this;
        }

        public Criteria andBookdateIsNotNull() {
            addCriterion("bookdate is not null");
            return (Criteria) this;
        }

        public Criteria andBookdateEqualTo(Date value) {
            addCriterion("bookdate =", value, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateNotEqualTo(Date value) {
            addCriterion("bookdate <>", value, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateGreaterThan(Date value) {
            addCriterion("bookdate >", value, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateGreaterThanOrEqualTo(Date value) {
            addCriterion("bookdate >=", value, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateLessThan(Date value) {
            addCriterion("bookdate <", value, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateLessThanOrEqualTo(Date value) {
            addCriterion("bookdate <=", value, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateIn(List<Date> values) {
            addCriterion("bookdate in", values, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateNotIn(List<Date> values) {
            addCriterion("bookdate not in", values, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateBetween(Date value1, Date value2) {
            addCriterion("bookdate between", value1, value2, "bookdate");
            return (Criteria) this;
        }

        public Criteria andBookdateNotBetween(Date value1, Date value2) {
            addCriterion("bookdate not between", value1, value2, "bookdate");
            return (Criteria) this;
        }

        public Criteria andDepositIsNull() {
            addCriterion("deposit is null");
            return (Criteria) this;
        }

        public Criteria andDepositIsNotNull() {
            addCriterion("deposit is not null");
            return (Criteria) this;
        }

        public Criteria andDepositEqualTo(Double value) {
            addCriterion("deposit =", value, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositNotEqualTo(Double value) {
            addCriterion("deposit <>", value, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositGreaterThan(Double value) {
            addCriterion("deposit >", value, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositGreaterThanOrEqualTo(Double value) {
            addCriterion("deposit >=", value, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositLessThan(Double value) {
            addCriterion("deposit <", value, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositLessThanOrEqualTo(Double value) {
            addCriterion("deposit <=", value, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositIn(List<Double> values) {
            addCriterion("deposit in", values, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositNotIn(List<Double> values) {
            addCriterion("deposit not in", values, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositBetween(Double value1, Double value2) {
            addCriterion("deposit between", value1, value2, "deposit");
            return (Criteria) this;
        }

        public Criteria andDepositNotBetween(Double value1, Double value2) {
            addCriterion("deposit not between", value1, value2, "deposit");
            return (Criteria) this;
        }

        public Criteria andPaymentIsNull() {
            addCriterion("payment is null");
            return (Criteria) this;
        }

        public Criteria andPaymentIsNotNull() {
            addCriterion("payment is not null");
            return (Criteria) this;
        }

        public Criteria andPaymentEqualTo(Double value) {
            addCriterion("payment =", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentNotEqualTo(Double value) {
            addCriterion("payment <>", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentGreaterThan(Double value) {
            addCriterion("payment >", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentGreaterThanOrEqualTo(Double value) {
            addCriterion("payment >=", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentLessThan(Double value) {
            addCriterion("payment <", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentLessThanOrEqualTo(Double value) {
            addCriterion("payment <=", value, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentIn(List<Double> values) {
            addCriterion("payment in", values, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentNotIn(List<Double> values) {
            addCriterion("payment not in", values, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentBetween(Double value1, Double value2) {
            addCriterion("payment between", value1, value2, "payment");
            return (Criteria) this;
        }

        public Criteria andPaymentNotBetween(Double value1, Double value2) {
            addCriterion("payment not between", value1, value2, "payment");
            return (Criteria) this;
        }

        public Criteria andDeposittypeIsNull() {
            addCriterion("deposittype is null");
            return (Criteria) this;
        }

        public Criteria andDeposittypeIsNotNull() {
            addCriterion("deposittype is not null");
            return (Criteria) this;
        }

        public Criteria andDeposittypeEqualTo(String value) {
            addCriterion("deposittype =", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeNotEqualTo(String value) {
            addCriterion("deposittype <>", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeGreaterThan(String value) {
            addCriterion("deposittype >", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeGreaterThanOrEqualTo(String value) {
            addCriterion("deposittype >=", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeLessThan(String value) {
            addCriterion("deposittype <", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeLessThanOrEqualTo(String value) {
            addCriterion("deposittype <=", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeLike(String value) {
            addCriterion("deposittype like", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeNotLike(String value) {
            addCriterion("deposittype not like", value, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeIn(List<String> values) {
            addCriterion("deposittype in", values, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeNotIn(List<String> values) {
            addCriterion("deposittype not in", values, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeBetween(String value1, String value2) {
            addCriterion("deposittype between", value1, value2, "deposittype");
            return (Criteria) this;
        }

        public Criteria andDeposittypeNotBetween(String value1, String value2) {
            addCriterion("deposittype not between", value1, value2, "deposittype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeIsNull() {
            addCriterion("paymenttype is null");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeIsNotNull() {
            addCriterion("paymenttype is not null");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeEqualTo(String value) {
            addCriterion("paymenttype =", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotEqualTo(String value) {
            addCriterion("paymenttype <>", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeGreaterThan(String value) {
            addCriterion("paymenttype >", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeGreaterThanOrEqualTo(String value) {
            addCriterion("paymenttype >=", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeLessThan(String value) {
            addCriterion("paymenttype <", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeLessThanOrEqualTo(String value) {
            addCriterion("paymenttype <=", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeLike(String value) {
            addCriterion("paymenttype like", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotLike(String value) {
            addCriterion("paymenttype not like", value, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeIn(List<String> values) {
            addCriterion("paymenttype in", values, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotIn(List<String> values) {
            addCriterion("paymenttype not in", values, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeBetween(String value1, String value2) {
            addCriterion("paymenttype between", value1, value2, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPaymenttypeNotBetween(String value1, String value2) {
            addCriterion("paymenttype not between", value1, value2, "paymenttype");
            return (Criteria) this;
        }

        public Criteria andPostpriceIsNull() {
            addCriterion("postprice is null");
            return (Criteria) this;
        }

        public Criteria andPostpriceIsNotNull() {
            addCriterion("postprice is not null");
            return (Criteria) this;
        }

        public Criteria andPostpriceEqualTo(Double value) {
            addCriterion("postprice =", value, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceNotEqualTo(Double value) {
            addCriterion("postprice <>", value, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceGreaterThan(Double value) {
            addCriterion("postprice >", value, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("postprice >=", value, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceLessThan(Double value) {
            addCriterion("postprice <", value, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceLessThanOrEqualTo(Double value) {
            addCriterion("postprice <=", value, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceIn(List<Double> values) {
            addCriterion("postprice in", values, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceNotIn(List<Double> values) {
            addCriterion("postprice not in", values, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceBetween(Double value1, Double value2) {
            addCriterion("postprice between", value1, value2, "postprice");
            return (Criteria) this;
        }

        public Criteria andPostpriceNotBetween(Double value1, Double value2) {
            addCriterion("postprice not between", value1, value2, "postprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceIsNull() {
            addCriterion("remaindprice is null");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceIsNotNull() {
            addCriterion("remaindprice is not null");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceEqualTo(Double value) {
            addCriterion("remaindprice =", value, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceNotEqualTo(Double value) {
            addCriterion("remaindprice <>", value, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceGreaterThan(Double value) {
            addCriterion("remaindprice >", value, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("remaindprice >=", value, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceLessThan(Double value) {
            addCriterion("remaindprice <", value, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceLessThanOrEqualTo(Double value) {
            addCriterion("remaindprice <=", value, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceIn(List<Double> values) {
            addCriterion("remaindprice in", values, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceNotIn(List<Double> values) {
            addCriterion("remaindprice not in", values, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceBetween(Double value1, Double value2) {
            addCriterion("remaindprice between", value1, value2, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andRemaindpriceNotBetween(Double value1, Double value2) {
            addCriterion("remaindprice not between", value1, value2, "remaindprice");
            return (Criteria) this;
        }

        public Criteria andSumprofitIsNull() {
            addCriterion("sumprofit is null");
            return (Criteria) this;
        }

        public Criteria andSumprofitIsNotNull() {
            addCriterion("sumprofit is not null");
            return (Criteria) this;
        }

        public Criteria andSumprofitEqualTo(Double value) {
            addCriterion("sumprofit =", value, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitNotEqualTo(Double value) {
            addCriterion("sumprofit <>", value, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitGreaterThan(Double value) {
            addCriterion("sumprofit >", value, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitGreaterThanOrEqualTo(Double value) {
            addCriterion("sumprofit >=", value, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitLessThan(Double value) {
            addCriterion("sumprofit <", value, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitLessThanOrEqualTo(Double value) {
            addCriterion("sumprofit <=", value, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitIn(List<Double> values) {
            addCriterion("sumprofit in", values, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitNotIn(List<Double> values) {
            addCriterion("sumprofit not in", values, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitBetween(Double value1, Double value2) {
            addCriterion("sumprofit between", value1, value2, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumprofitNotBetween(Double value1, Double value2) {
            addCriterion("sumprofit not between", value1, value2, "sumprofit");
            return (Criteria) this;
        }

        public Criteria andSumpriceIsNull() {
            addCriterion("sumprice is null");
            return (Criteria) this;
        }

        public Criteria andSumpriceIsNotNull() {
            addCriterion("sumprice is not null");
            return (Criteria) this;
        }

        public Criteria andSumpriceEqualTo(Double value) {
            addCriterion("sumprice =", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceNotEqualTo(Double value) {
            addCriterion("sumprice <>", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceGreaterThan(Double value) {
            addCriterion("sumprice >", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("sumprice >=", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceLessThan(Double value) {
            addCriterion("sumprice <", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceLessThanOrEqualTo(Double value) {
            addCriterion("sumprice <=", value, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceIn(List<Double> values) {
            addCriterion("sumprice in", values, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceNotIn(List<Double> values) {
            addCriterion("sumprice not in", values, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceBetween(Double value1, Double value2) {
            addCriterion("sumprice between", value1, value2, "sumprice");
            return (Criteria) this;
        }

        public Criteria andSumpriceNotBetween(Double value1, Double value2) {
            addCriterion("sumprice not between", value1, value2, "sumprice");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ordertable
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ordertable
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}